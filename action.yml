name: 'ECS Deploy Action'
description: 'Deploy an application to Amazon ECS using a simplified YAML configuration'

inputs:
  environment:
    description: 'The environment to deploy to'
    required: true
  ecs_service:
    description: 'The name of the ECS service'
    required: true
  image_name:
    description: 'The name of the Docker image'
    required: true
  tag:
    description: 'The tag of the Docker image'
    required: true
  task_config_yaml:
    description: 'Path to the YAML file containing task configuration'
    required: true
  aws_account_id:
    description: 'The AWS account ID'
    required: true
  aws_region:
    description: 'The AWS region'
    required: true
  ecs_cluster:
    description: 'The name of the ECS cluster'
    required: true
  aws_role:
    description: 'The AWS IAM role to assume'
    default: 'github_services'
    required: false
  dry_run:
    description: 'Whether to perform a dry run'
    default: 'false'
    required: false 
  ecr_registry:
    description: 'The ECR registry URL'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: "arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role }}"
        aws-region: ${{ inputs.aws_region }}

    - id: login_ecr
      uses: aws-actions/amazon-ecr-login@v2
    - id: define-registry
      run: |
        if [ "${{ inputs.ecr_registry }}" == "true" ]; then
          echo "registry=${{ steps.login_ecr.outputs.registry }}" >> $GITHUB_OUTPUT
        else
          echo "registry=" >> $GITHUB_OUTPUT
        fi
      shell: bash
      
    - id: generate-task-def
      run: |
        python3 ${{ github.action_path }}/scripts/generate_task_def.py \
          "${{ inputs.task_config_yaml }}" \
          "${{ inputs.ecs_cluster }}" \
          "${{ inputs.aws_region }}" \
          "${{ steps.define-registry.outputs.registry }}" \
          "${{ inputs.image_name }}" \
          "${{ inputs.tag }}" 
      shell: bash

    - id: generate-sam-template
      run: |
        python3 ${{ github.action_path }}/scripts/generate_sam_template.py \
          "${{ inputs.task_config_yaml }}" \
          "${{ inputs.ecs_cluster }}" \
          "${{ inputs.aws_region }}" \
          "${{ steps.define-registry.outputs.registry }}" \
          "${{ inputs.image_name }}" \
          "${{ inputs.tag }}" 
      shell: bash      

    - uses: aws-actions/amazon-ecs-deploy-task-definition@v2.3.1
      if: ${{ inputs.dry_run }} == 'false'
      id: ecs-deploy
      with:
        task-definition: task-definition.json
        service: ${{ inputs.ecs_service }}
        cluster: ${{ inputs.ecs_cluster }}
        desired-count: ${{ steps.generate-task-def.outputs.replica_count }}
        wait-for-service-stability: true
        