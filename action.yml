name: 'ECS Deploy Action'
description: 'Deploy an application to Amazon ECS using a simplified YAML configuration'

inputs:
  ecs_task:
    description: 'The name of the ECS service'
    required: true
  samconfig_yaml:
    description: 'Path to the YAML file containing task configuration'
    required: true
  aws_account_id:
    description: 'The AWS account ID'
    required: true
  aws_region:
    description: 'The AWS region'
    required: true
  ecs_cluster:
    description: 'The name of the ECS cluster'
    required: true
  aws_role:
    description: 'The AWS IAM role to assume'
    default: 'github_services'
    required: false
  task_config_yaml:
    description: 'Path to the YAML file containing task configuration'
    required: true
  image_name:
    description: 'The name of the Docker image'
    required: true
  tag:
    description: 'The tag of the Docker image'
    required: true
runs:
  using: "composite"
  steps:
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: "arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role }}"
        aws-region: ${{ inputs.aws_region }}

    - id: login_ecr
      uses: aws-actions/amazon-ecr-login@v2
    - id: define-registry
      run: |
        if [ "${{ inputs.ecr_registry }}" == "true" ]; then
          echo "registry=${{ steps.login_ecr.outputs.registry }}" >> $GITHUB_OUTPUT
        else
          echo "registry=" >> $GITHUB_OUTPUT
        fi
      shell: bash
      
    - id: generate-task-def
      run: |
        python3 ${{ github.action_path }}/scripts/generate_task_def.py \
          "${{ inputs.task_config_yaml }}" \
          "${{ inputs.ecs_cluster }}" \
          "${{ inputs.aws_region }}" \
          "${{ steps.define-registry.outputs.registry }}" \
          "${{ inputs.image_name }}" \
          "${{ inputs.tag }}" 
      shell: bash

    - uses: aws-actions/amazon-ecs-deploy-task-definition@v2.3.1
      id: ecs-deploy
      with:
        task-definition: task-definition.json
        cluster: ${{ inputs.ecs_cluster }}
        
    - id: generate-sam
      run: |
        python3 ${{ github.action_path }}/scripts/generate_step_function.py \
          --config "${{ inputs.task_config_yaml }}" \
          --task-arn "${{ steps.ecs-deploy.outputs.task-definition-arn }}"
      shell: bash 
      working-directory: ${{ github.workspace}}

    - name: Print generated SAM template
      run: cat template.yaml
      shell: bash
      working-directory: ${{ github.workspace}}

    - uses: delivops/sam-deploy-action@main
      with:
        aws_region: ${{ inputs.aws_region }}
        aws_account_id: ${{ inputs.aws_account_id }}
        aws_role: ${{ inputs.aws_role }}
        sam_config_path: ${{ inputs.samconfig_yaml }}
        stack_name: ${{ inputs.ecs_task }}
        sam_template_path: template.yaml      
